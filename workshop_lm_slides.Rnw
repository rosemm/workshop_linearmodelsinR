\documentclass[l1pt]{beamer}

\usetheme{Rochester}
\usecolortheme{seagull}
\setbeamercovered{invisible} % https://www.sharelatex.com/blog/2013/08/20/beamer-series-pt4.html
\setbeamertemplate{footline}[frame number]

\usepackage{color} % https://en.wikibooks.org/wiki/LaTeX/Colors#Predefined_colors
\usepackage{hyperref}
\usepackage{url}
\usepackage{graphicx}
\graphicspath{ {figure/}{images/} }

\definecolor{keyidea_bk}{rgb}{0.74, 0.83, 0.9}
\definecolor{keyidea_tx}{rgb}{0.0, 0.28, 0.67}
\definecolor{seealso_bk}{rgb}{0.96, 0.73, 1.0}
\definecolor{seealso_tx}{rgb}{0.38, 0.25, 0.32}
\definecolor{learnmore_bk}{rgb}{0.52, 0.73, 0.4}
\definecolor{learnmore_tx}{rgb}{0.0, 0.27, 0.13}
\definecolor{wwtd_bk}{rgb}{0.98, 0.93, 0.37}
\definecolor{wwtd_tx}{rgb}{1.0, 0.56, 0.0}
\definecolor{hwydt_bk}{rgb}{1.0, 0.72, 0.77}
\definecolor{hwydt_tx}{rgb}{0.79, 0.08, 0.48}
	
\newcommand*\keyidea[1]{
\setbeamercovered{invisible}
\pause
  \begin{center}
  \colorbox{keyidea_bk}{\parbox{0.9\textwidth}{{\color{keyidea_tx}\textbf{Key idea: }#1}}}
  \end{center}
}

\newcommand*\seealso[1]{
\setbeamercovered{invisible}
\pause
  \begin{center}
  \colorbox{seealso_bk}{\parbox{0.9\textwidth}{{\color{seealso_tx}\textbf{See also: }#1}}}
  \end{center}
}

\newcommand*\learnmore[1]{
\setbeamercovered{invisible}
\pause
  \begin{center}
  \colorbox{learnmore_bk}{\parbox{0.9\textwidth}{{\color{learnmore_tx}\textbf{Learn more: }#1}}}
  \end{center}
}

\newcommand*\hwydt[1]{
  \begin{center}
  \colorbox{hwydt_bk}{\parbox{0.9\textwidth}{{\color{hwydt_tx}\textbf{How would you do this? }#1}}}
  \end{center}
}

\newcommand*\wwtd[1]{
  \begin{center}
  \colorbox{wwtd_bk}{\parbox{0.9\textwidth}{{\color{wwtd_tx}\textbf{What will this do? }#1}}}
  \end{center}
}


\begin{document}

\title[R Workshop]{Intro to linear models in R: From data to manuscript}

\date[01/02/2021]{Feb 1st, 2021}
\author[R. Hartman]{Rose Hartman, PhD\\ she/her}
\institute[CHOP]{Teaching Demonstration: Arcus Education Team\\ Children's Hospital of Philadelphia}

\maketitle

<<setup, include=FALSE, echo=FALSE>>=
library("knitr")
opts_chunk$set(fig.align='center',fig.show='hold',size='footnotesize', eval=FALSE)

# #to get r code from the slides, use purl()
# purl("workshop_lm_slides.rnw")

@

% very important to use option [fragile] for frames containing code output!
% -------------------------------------------------------------
\begin{frame}[fragile]{Why we are here}

% If you've use t-tests, ANOVAs, or regression, then you've been using linear models, even if you didn't realize it. 
\begin{itemize}
    \item<1-> Linear models are some of the most common (and useful!) tools in data analysis.
    \item<2-> R is a fantastic choice for reproducible analyses. R-markdown lets you bake your data and analyses right into your manuscript drafts, saving time and reducing errors.
    \item<3-> Once you get a handle on linear models in R, you're off to the races!
  \end{itemize}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Who this workshop is for}

This workshop is geared toward people working on practical data analysis problems in a research context. \\
\bigskip
It is appropriate for beginners, but you should have at least some exposure to R (or be willing to jump in quickly) and some basic stats training. 

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{This workshop}

\begin{itemize}
   \item<1-> Focus on the R code rather than the stats --- if you'd like to learn about the stats behind the general linear model more deeply, I can recommend several excellent classes and texts. 
    \item<2-> Lots of practice. Learn R by using R!
    \item<3-> We'll be using \verb+haven+ to read in an SPSS data file, \verb+ggplot2+ for plotting, and \verb+pander+ for making tables of model results
    \item<4-> For those of you who are learning/psych geeks...
    \begin{itemize}
	    \item<4-> interleaved training and progressive alignment
	    \item<5-> realistic practice problems from the two perspectives you're most likely to encounter in real life
	    \item<6-> consistent color-coding of different types of information 
	    \end{itemize}
  \end{itemize}
  
<< notes_this-workshop, echo=FALSE>>=
# I'm trying to maximize your ability to generalize what you learn here to new circumstances you'll encounter, so I'll be harnessing the power of interleaved training and progressive alignment. https://openlearning.mit.edu/mit-faculty/research-based-learning-findings/spaced-and-interleaved-practice
# I'll ask you to tackle realistic practice problems from the two perspectives you'll most likely to encounter in real life: I have an idea in my head and I need to turn it into code, and I've got some code here and I need to figure out what it does.
# You'll also notice consistent color-coding of different types of information throughout to help you allocate your attention in support of your learning goals, and to facilitate appropriate comparison across situations.
# Things I'm glossing over include: study design, violations to the assumptions of the linear model (e.g. non-normal residuals, clustered data), strategies for handling outliers and missing data, ins and outs of hypothesis testing and interpretation, etc.
@

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{}

Keep an eye out for...
\pause
\hwydt{}
\pause
\wwtd{}
\learnmore{resources to check out}
\keyidea{the big ideas you need to hold on to}
\seealso{other functions or packages that do a similar thing}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{How to follow along}

You have two options for participating in this workshop:
\begin{itemize}
    \item<1-> Work in your own instance of R Studio (you'll still want the data file available here \url{https://github.com/rosemm/workshop_linearmodelsinR})
    \item<2-> Open the rstudio.cloud project for this workshop, which contains all the code: \url{link}
  \end{itemize}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{}

If you don't already have \verb+ggplot2+, \verb+haven+, and \verb+pander+ installed, do that now:
<<>>=
install.packages("ggplot2")
install.packages("haven")
install.packages("pander")

library("ggplot2")
library("haven")
library("pander")
@

\learnmore{In addition to SPSS, haven also works with SAS and Stata files}
\seealso{haven and ggplot2 are both part of the tidyverse, an excellent collection of r packages for data science https://www.tidyverse.org/}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Workshop Overview}

\tableofcontents[]

\end{frame}
% -------------------------------------------------------------
\section{Background and overview}
\subsection{What is the general linear model?}
\setbeamercovered{transparent}
% -------------------------------------------------------------
\begin{frame}[fragile]{What counts as part of the general linear model?}

Quite a lot! Most basic stats techniques are based on the general linear model.
\begin{itemize}
    \item<1-> regression (simple and multiple)
    \item<2-> t-tests (all of the flavors)
    \item<3-> ANOVAs, ANCOVAs, etc.
    \item<4-> MANOVAs, multivariate multiple regression
    \item<5-> advanced techniques like HLM, SEM, etc. are extensions
  \end{itemize}
\pause
\pause
\pause
\pause
\keyidea{Most basic stats rely on the same underlying math. Sometimes we want the results displayed differently depending on the design, but the calculations are the same.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{What is the general linear model?}
\setbeamercovered{invisible}

All the general linear model does is represent your data generating process as a single equation for a line:\\
\bigskip
\[ \textbf{Y} = \textbf{X*B} + \textbf{error} \]
\pause
\vfill
In most cases (when you have a single outcome variable), this can be written in its more familiar form:\\
\bigskip
\[ Y = b0 + b1*X1 + b2*X2 + ... + error \]

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Key ideas from this section: Linear models}
\keyidea{Most basic stats rely on the same underlying math. Sometimes we want the results displayed differently depending on the design, but the calculations are the same.}
\end{frame}
% -------------------------------------------------------------

\section{Running linear models}
\subsection{Prepping the data}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsubsection, 
    hideothersubsections, 
    sectionstyle=show/shaded, 
    subsectionstyle=show/shaded, 
    ] 
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Getting your data into R}

Check your working directory:
<< getwd >>=
getwd()
@
\pause
If you want R to find something on your computer, you have three options:
\begin{enumerate}
  \item Put the file in R's working directory
  \item Move R's working directory to whereever the file is saved using setwd()
  \item Specify the file path when you tell R to look for the file
\end{enumerate}

\seealso{You can also use the menu options in R Studio to change R's working directory.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Getting your data into R}

I'll use option 3, specifying the file path when I tell R to read it in. \\
\pause
\bigskip
Find the file on your computer, get its location, and add that file path to your \verb+read_sav+ command:
<< >>=
atlas <- read_sav("data/ATLAS.sav")
@

\keyidea{Remember, if your data file isn't in R's working directory you need to tell R where to look for it.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Check your data}

These are data from an intervention intended to reduce steroid use in student athletes by targeting their strength training self-efficacy. 

<<>>=
str(atlas)
head(atlas)
summary(atlas)
@


\keyidea{Always check your data frame using functions like str(), head(), and summary() before you run any tests.}
\learnmore{Read about the ATLAS project here \url{https://www.ohsu.edu/sites/default/files/2019-06/ATLAS-Program.pdf}}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Creating factors}

<< make_factor >>=
atlas$intervention <- factor(atlas$intervention, 
                             levels=c(0, 1),
                             labels=c("no", "yes")) 

summary(atlas) # check your work
@
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Key ideas from this section: Getting your data into R}

\keyidea{Remember, if your data file isn't in R's working directory you need to tell R where to look for it.}
\keyidea{Always check your data frame using functions like str(), head(), and summary() before you run any tests.}

\end{frame}
% -------------------------------------------------------------


\subsection{Writing the model formula}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsubsection, 
    hideothersubsections, 
    sectionstyle=show/shaded, 
    subsectionstyle=show/shaded, 
    ] 
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{lm()}

<<>>=
?lm
@


\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Writing a formula}

Example question: Do students who got the intervention show improved strength-training self-efficacy posttest (STSE1), taking into account their pretest strength-training self-efficacy scores (STSE0)?

\pause
<< ex1_model >>=
lm(STSE1 ~ STSE0 + intervention, data=atlas,
   na.action=na.exclude)
@

\keyidea{Models in lm() are specified as a "formula", like this: $outcome \sim predictors$}

\end{frame}
% -------------------------------------------------------------
\setbeamercovered{invisible} 
% -------------------------------------------------------------
\begin{frame}[fragile]{Test your knowledge}

\hwydt{Specify a model formula to test whether students' strength-training self-efficacy at post test (STSE1) are related to their post-test self-esteem (SE1)}
\pause
<<  >>=
lm(STSE1 ~ SE1, data=atlas,
    na.action=na.exclude)
@

\keyidea{In the lm() function, you refer to variables in the data by their bare names.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Test your knowledge}

\hwydt{Specify a model formula to test whether students' strength-training self-efficacy at post test (STSE1) are different for the intervention group vs. control}
\pause
<<  >>=
lm(STSE1 ~ intervention, data=atlas,
    na.action=na.exclude)
@

\keyidea{When using a categorical variable in your model, make sure it's being treated as a factor in the data}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Test your knowledge}

\wwtd{What will this model test?}
<<  >>=
lm(STSE1 ~ intervention + SE1 + STSE0, data=atlas,
    na.action=na.exclude)
@
\pause
It will test whether students' strength-training self-efficacy at post test (STSE1) can be predicted from whether they got the intervention, their pretest self-esteem (SE1), controlling for their pretest strength-training self-efficacy (STSE0).

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Test your knowledge}

\hwydt{Expand the previous model to also test whether the effect of the intervention depends on the students' pretest self-esteem (SE1). In other words, add an interaction between intervention and pretest self-esteem.}
\pause
<<  >>=
lm(STSE1 ~ intervention + SE1 + STSE0 + SE1:STSE0, data=atlas,
    na.action=na.exclude)
@
\pause
<<  >>=
lm(STSE1 ~ intervention + SE1*STSE0, data=atlas,
    na.action=na.exclude)
@

\keyidea{Interactions are specified with :, and * is shorthand for an interaction and both component main effects.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Test your knowledge}

\hwydt{Specify a model formula to test whether students' strength-training self-efficacy at post test (STSE1) can be predicted from whether they got the intervention, their pretest strength-training self-efficacy (STSE0). Allow for the possibility that the effect of the intervention depends on pretest score.}
\pause
<<  >>=
lm(STSE1 ~ intervention + STSE0 + intervention:STSE0, data=atlas,
    na.action=na.exclude)
@
\pause
<<  >>=
lm(STSE1 ~ intervention*STSE0, data=atlas,
    na.action=na.exclude)
@

\end{frame}
% -------------------------------------------------------------

% -------------------------------------------------------------
\begin{frame}[fragile]{Key ideas from this section: Running the model}

\keyidea{Models in lm() are specified as a "formula", like this: $outcome \sim predictors$}
\keyidea{In the lm() function, you refer to variables in the data by their bare names.}
\keyidea{When using a categorical variable in your model, make sure it's being treated as a factor in the data}
\keyidea{Interactions are specified with :, and * is shorthand for an interaction and both component main effects.}

\end{frame}
% -------------------------------------------------------------

\subsection{Running the model}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsubsection, 
    hideothersubsections, 
    sectionstyle=show/shaded, 
    subsectionstyle=show/shaded, 
    ] 
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{The model}

Let's run that last one.
<<>>=
model1 <- lm(STSE1 ~ intervention*STSE0, data=atlas,
              na.action=na.exclude)
@

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{The model}

Let's look at that object we just created:
<<>>=
model1

str(model1)

plot(model1)

summary(model1)
@

\end{frame}
% -------------------------------------------------------------

\section{Presenting model results}
\subsection{Literate statistical programming}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsubsection, 
    hideothersubsections, 
    sectionstyle=show/shaded, 
    subsectionstyle=show/shaded, 
    ] 
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Building dynamic documents}

No matter what software you're using, it's a pain to copy-paste over numbers from a table in your output to a table in your manuscript. \\
\pause
\bigskip
More importantly, it makes your work less reproducible, and any human error in that copy-pasting can create a huge mess.\\
\pause
\bigskip
Wouldn't it be great if you could have R automatically produce your output in Word or pdf? Wish granted!

\keyidea{Literate statistical program saves you time, makes your work cleaner and more reproducible, and soothes your anxiety.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Building dynamic documents}

<<>>=
install.packages("knitr")
library("knitr")
@

\pause
You can use knitr tools built right into R Studio to write R-markdown documents that include both code and text, and then "knit" them up into .docx, .pdf, or .html.\\
This makes it easy to get your R output into (close to) the table formatting you'll need in your document.

\seealso{If you want to use LaTex instead of markdown for the text part, use Sweave files (.rnw) instead of  R-markdown (.rmd)}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Building dynamic documents}

Markdown is a super simple language for formatting text. It can't do much, but it handles most of what you'll need for a basic document, and it's really quick to learn.

\learnmore{ \url{https://daringfireball.net/projects/markdown/basics} }
\pause
Try opening a new .rmd file in R Studio now!

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Building dynamic documents}

We'll use pander to automatically format model summaries into lovely tables.
<< >>=
?pander
@

\learnmore{There are many packages for making R output into nice tables, see \url{https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html}. I find pander yields the most professional model results in Word output.}

\end{frame}
% -------------------------------------------------------------

\subsection{Summarizing the results}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsubsection, 
    hideothersubsections, 
    sectionstyle=show/shaded, 
    subsectionstyle=show/shaded, 
    ] 
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Summarize the model}

<<>>=
summary(model1)
@

\keyidea{R has summarizing functions that work on the model object you saved}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Summarize the model}

add this code to your .rmd file, and make sure you've set your knitr options to results='asis'
<<>>=
pander(summary(model1))
@

\seealso{The stargazer package makes lovely model tables and works for knitting to pdf but not Word}

\seealso{knitr has a function for making tables, kable(), but it doesn't work for model summaries unless you run broom::tidy() or paperR::prettify() on them first}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Summarize the model}

If you want your results ANOVA style (with the sums of squares and the F tests instead of regression coefficients and t-tests), use the Anova() function in the car package
<<>>=
car::Anova(model1, type=3) # type 3 sums of squares
@

\keyidea{ANOVA style output and regression style output are just two different ways to communicate the same information}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Key ideas from this section: Summarizing results}

\keyidea{Literate statistical program saves you time, makes your work cleaner and more reproducible, and soothes your anxiety.}
\keyidea{R has summarizing functions that work on the model object you saved}
\keyidea{ANOVA style output and regression style output are just two different ways to communicate the same information}

\end{frame}
% -------------------------------------------------------------

\subsection{Plotting}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsubsection, 
    hideothersubsections, 
    sectionstyle=show/shaded, 
    subsectionstyle=show/shaded, 
    ] 
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting}

The relationship between pretest and posttest scores
<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1)) + 
  geom_point()
@

\pause
To reduce overplotting:
<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1)) + 
  geom_point(alpha=.3)
@

\keyidea{ggplot2 works in layers. First you specify the variables you want to plot, then use layers to control the way they're plotted.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting: Data subsets}

Add in whether or not they got the intervention
<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1, color=intervention)) + 
  geom_point(alpha=.3)
@

\pause
another option
<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1)) + 
  geom_point(alpha=.3) + 
  facet_wrap(~ intervention)
@

\keyidea{Use facet\_wrap() to split into multiple plots of subsets of the data.}
\learnmore{\url{https://ggplot2-book.org/facet.html}}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting: Factor levels}

Want to change the way levels of a factor display? \\
You'll need to change the factor itself in the dataframe:
<< relabel_factor >>=
atlas$intervention <- factor(atlas$intervention,
                             levels=c("yes", "no"),
                             labels=c("intervention", "control"))
# check your work
summary(atlas$intervention) 
# re-run the model with the updated factor levels
model1 <- lm(STSE1 ~ intervention*STSE0, data=atlas,
               na.action=na.exclude)
@

\keyidea{It's easiest to make changes to the data before plotting, rather than manipulating things like factor levels within ggplot2.}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting: Lines of best fit}

Show the line of best fit
<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1, 
                  color=intervention, fill=intervention)) + 
  geom_point(alpha=.3) + 
  geom_smooth(method="lm")
@

\keyidea{geom\_smooth(method="lm") will draw the line of best fit through the data it corresponds to.} 
\keyidea{Adding a factor to color= within aes() splits points and lines into subsets}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting: Lines of best fit}

\wwtd{Adding a line of best fit to faceted plots}

<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1)) + 
  geom_point(alpha=.3) + 
  geom_smooth(method="lm") + 
  facet_wrap(~ intervention)
@

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting: Axis labels}
<<>>=
ggplot(atlas, aes(x=STSE0, y=STSE1, 
                  color=intervention, fill=intervention)) + 
  geom_point(alpha=.3) + 
  geom_smooth(method="lm") + 
  labs(x="pretest strength training self-efficacy",
       y="posttest strength training self-efficacy", 
       color=NULL, fill = NULL) # removes the legend label
@

\learnmore{\url{https://ggplot2-book.org/scales-guides.html}}
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Plotting the line from your model, exactly}
Because geom\_smooth() runs its own calculation to draw the line of best fit, sometimes you may want to specify the line yourself, so you can make sure it represents exactly what's in your model.

<< predict >>=
atlas$pred <- predict(model1, atlas)
@

\pause
<< plot_predict >>=
ggplot(atlas, aes(x=STSE0, y=STSE1, 
                  color=intervention, fill=intervention)) + 
  geom_point(alpha=.3) + 
  geom_line(aes(y=pred, x=STSE0, color=intervention)) + 
  labs(x="pretest strength training self-efficacy",
       y="posttest strength training self-efficacy")
@

\seealso{you can also add lines manually with geom\_abline(), where you specify the slope and intercept}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Key ideas from this section: Plotting results}

\keyidea{text}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Additional resources for learning ggplot2}
\begin{itemize}
  \item Read Jenny Bryan's \verb+ggplot2+ tutorials --- tons of great examples and code! Click on the files that have the file extension .md (those will be the easiest to read) \\ \url{https://github.com/jennybc/ggplot2-tutorial}
  \item All of the geoms, with pictures \\ \url{http://docs.ggplot2.org/current/}
  \item For more in-depth material on \verb+ggplot2+, see the resources at \\ \url{http://ggplot2.org/}
\end{itemize}

\end{frame}
% -------------------------------------------------------------


\section{Data to manuscript}
% -------------------------------------------------------------
\begin{frame}[fragile]{Overview}
\tableofcontents[ 
    currentsection,  
    sectionstyle=show/shaded
    ] 
\end{frame}
% -------------------------------------------------------------

\subsection{Your R-markdown document}
% -------------------------------------------------------------
\begin{frame}[fragile]{Text and chunks}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{knitr options}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{YAML header}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{rticles templates}
text
\end{frame}
% -------------------------------------------------------------

\subsection{Table output}
% -------------------------------------------------------------
\begin{frame}[fragile]{Tables: Descriptive stats}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Tables: Model output}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Tables: Custom tables}
text
\end{frame}
% -------------------------------------------------------------

\subsection{In-line stats}
% -------------------------------------------------------------
\begin{frame}[fragile]{In-line descriptive stats}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{In-line model summary}
text
\end{frame}
% -------------------------------------------------------------

\subsection{Perfecting plots}
% -------------------------------------------------------------
\begin{frame}[fragile]{Perfecting plots: Theme}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Perfecting plots: Colors}

\learnmore{For a tutorial on controlling colors in ggplot, see an old UO R Club post of mine: \url{http://blogs.uoregon.edu/rclub/2015/02/17/picking-pretty-plot-palates/}}

\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Perfecting plots: Axes and lables}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Perfecting plots: Saving images}
text
\end{frame}
% -------------------------------------------------------------
\subsection{Writing and citations}
% -------------------------------------------------------------
\begin{frame}[fragile]{Headers and paragraphs}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Citations}
text
\end{frame}
% -------------------------------------------------------------
% -------------------------------------------------------------
\begin{frame}[fragile]{Key ideas from this section: Data to manuscript}

\keyidea{text}

\end{frame}
% -------------------------------------------------------------
\end{document}